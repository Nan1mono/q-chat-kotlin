/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    kotlin("jvm") version "2.1.10"
    id("idea")
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.org.springframework.boot.spring.boot.starter)
    api(libs.org.springframework.boot.spring.boot.starter.web)
    api(libs.org.springframework.boot.spring.boot.starter.webflux)
    api(libs.org.springframework.boot.spring.boot.starter.integration)
    api(libs.org.springframework.integration.spring.integration.websocket)
    api(libs.com.baomidou.mybatis.plus.spring.boot3.starter)
    api(libs.com.baomidou.mybatis.plus.jsqlparser.v4.v9)
    api(libs.com.baomidou.mybatis.plus.generator)
    api(libs.org.apache.velocity.velocity.engine.core)
    api(libs.mysql.mysql.connector.java)
    api(libs.com.alibaba.druid.spring.boot.starter)
    api(libs.org.springframework.boot.spring.boot.starter.aop)
    api(libs.com.alibaba.fastjson2.fastjson2)
    api(libs.org.springframework.boot.spring.boot.configuration.processor)
    api(libs.org.apache.commons.commons.lang3)
    api(libs.org.apache.commons.commons.collections4)
    api(libs.org.springdoc.springdoc.openapi.starter.webmvc.ui)
    api(libs.com.google.guava.guava)
    api(libs.org.codehaus.janino.janino)
    api(libs.org.telegram.telegrambots)
    api(libs.org.jetbrains.kotlin.kotlin.stdlib)
    testImplementation(libs.org.springframework.boot.spring.boot.starter.test)
    testImplementation(libs.junit.junit)
    testImplementation(libs.org.jetbrains.kotlin.kotlin.test.junit5)
    testImplementation(libs.org.junit.jupiter.junit.jupiter)
    testImplementation(libs.org.jetbrains.kotlin.kotlin.test)
}

group = "com.project.template"
version = "1.0-SNAPSHOT"
description = "q-chat-kotlin"
java.sourceCompatibility = JavaVersion.VERSION_21

idea {
    module {
        // enable gradle incremental compilation
        isDownloadSources = false
        isDownloadJavadoc = false
    }
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
